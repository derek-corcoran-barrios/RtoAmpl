{
    "collab_server" : "",
    "contents" : "\n########\nlibrary(raster)\nlibrary(gdistance)\nlibrary(dplyr)\nlibrary(tidyr)\n\nr   <- raster(nrows=10,ncols=10,xmn=-10,ymn=-10,xmx=10,ymx=10)\nr[] <- rep(1, ncell(r))\n\nextent(r) <- c(-10, 10, -10, 10)\n\nDistConect<- function(Raster, Distance, Time = 7){\n  h16  <- transition(Raster, transitionFunction=function(x){1},16,symm=FALSE)\n  \n  h16   <- geoCorrection(h16, scl=FALSE)\n  \n  B <- xyFromCell(Raster, cell = 1:ncell(Raster))\n  \n  connections <- list()\n  for (i in 1:nrow(B)){\n    arcs <- list()\n    temp <- accCost(h16,B[i,])\n    temp[values(temp) > Distance] = NA\n    index <- c(1:ncell(temp))[!is.na(values(temp))]\n    for (j in index){\n      arcs[[j]] <- c(i, j, temp[j])\n    }\n    connections[[i]] <- do.call(\"rbind\", arcs)\n    colnames(connections[[i]]) <- c(\"from\", \"to\", \"dist\")\n    print(paste(i, \"of\", nrow(B)))\n  }\n  \n  connections <- do.call(\"rbind\", connections)\n  connections <- as.data.frame(connections)\n  connections$Beta <- exp(-(connections$dist/max(connections$dist)))\n  b <- connections %>% group_by(from) %>% summarize(TotalBeta = sum(Beta))\n  connections <-merge(connections, b)\n  connections$beta <-connections$Beta /connections$TotalBeta\n  connections <- connections[,c(1,2,6)]\n  n <- nrow(connections)\n  connections <- do.call(\"rbind\", replicate((Time), connections, simplify = FALSE))\n  connections$Time <- rep(c(0:(Time-1)), each =n)\n  return(connections)\n}\n\n\n\n\n\n#######################################Funcion\n\nunivariate <- readRDS(\"univarate.rds\")\nlibrary(raster)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(gdistance)\n\n\nRasterToAmplDat <- function(Stack, maxalpha = 10, maxbiomass = 2, maxcapacidad = 10, name = \"Stack\", Dist = 7){\n  Alpha <- list()\n  for (i in 1:nlayers(Stack)){\n    temp <- data.frame(Alpha = values(Stack[[i]]), ID = 1:length(values(Stack[[i]])), Time = i)\n    Alpha[[i]] <- temp[complete.cases(temp),]\n  }\n  \n  Alpha <-  do.call(rbind, Alpha)\n  Alpha$Alpha <- Alpha$Alpha/max(Alpha$Alpha)*maxalpha\n  \n  \n  Biomasa <- data.frame(Biomasa = (values(Stack[[1]])/max(values(Stack[[1]]), na.rm = T))*maxbiomass, ID = 1:length(values(Stack[[1]])))\n  Biomasa <-  Biomasa[complete.cases(Biomasa),]\n  Biomasa$Biomasa <- round(Biomasa$Biomasa, 4)\n  \n  Capacidad <- list()\n  for (i in 1:nlayers(Stack)){\n    temp <- data.frame(Capacidad = values(Stack[[i]]), ID = 1:length(values(Stack[[i]])), Time = i)\n    Capacidad[[i]] <- temp[complete.cases(temp),]\n  }\n  \n  Capacidad <-  do.call(rbind, Capacidad)\n  Capacidad$Capacidad <- Capacidad$Capacidad/max(Capacidad$Capacidad)*maxcapacidad\n  \n  Nodos <- merge(Alpha, Capacidad)\n  \n  Alphas <- spread(Alpha, key = Time, value = Alpha)\n  Alphas$ID <- paste(\"[\", Alphas$ID, \",*]\", sep = \"\")\n  Alphas$T1 <- 0\n  Alphas$T2 <- 1\n  Alphas$T3 <- 2\n  Alphas$T4 <- 3\n  Alphas$T5 <- 4\n  Alphas$T6 <- 5\n  Alphas$T7 <- 6\n  Alphas$T8 <- 7\n  Alphas <- Alphas[,c(1,10,2,11,3,12,4,13,5,14,6,15,7,16,8,17,9)]\n  Alphas$line <- \"\\n\"\n  \n  Biomasas <- Biomasa[,c(2,1)]\n  Biomasas$line <- \"\\n\"\n  \n  Capacidades <- spread(Capacidad, key = Time, value = Capacidad)\n  Capacidades$ID <- paste(\"[\", Capacidades$ID, \",*]\", sep = \"\")\n  Capacidades$T1 <- 0\n  Capacidades$T2 <- 1\n  Capacidades$T3 <- 2\n  Capacidades$T4 <- 3\n  Capacidades$T5 <- 4\n  Capacidades$T6 <- 5\n  Capacidades$T7 <- 6\n  Capacidades$T8 <- 7\n  Capacidades <- Capacidades[,c(1,10,2,11,3,12,4,13,5,14,6,15,7,16,8,17,9)]\n  Capacidades$line <- \"\\n\"\n  \n  Cost <- data.frame(ID = Biomasas$ID, Cost = 1, line = \"\\n\")\n  \n  Beta <- DistConect(Stack[[1]], Distance = Dist)\n  temp <-  split(Beta, Beta$Time)\n  Betas <- do.call(cbind, lapply(1:length(temp), function(i){\n    if (i == 1){\n      setNames(data.frame(paste(\"[\",temp[[i]][[\"from\"]], \",\", temp[[i]][[\"to\"]], \",*\",\"]\", sep = \"\"), temp[[i]][\"Time\"], temp[[i]][\"beta\"]), \n               c(\"V\", paste(\"T\", i, sep = \"\"), i-1))\n    } else if (i == length(temp)){\n      setNames(data.frame(temp[[i]][\"Time\"], temp[[i]][\"beta\"], rep(\"\\n\", NROW(temp[[i]]))), \n               c(paste(\"T\", i, sep = \"\"), i-1, \"line\"))\n    } else {\n      setNames(data.frame(temp[[i]][\"Time\"], temp[[i]][\"beta\"]),\n               c(paste(\"T\", i, sep = \"\"), i-1))\n    }\n  }))\n  \n  sink(paste0(name, \".dat\"))\n  cat(c(\"set V :=\", unique(Alpha$ID), \";\"))\n  cat(\"\\n\")\n  cat(\"\\n\")\n  cat(c(\"set E :=\", paste0(\"(\",unique(unite_(Beta, col = \"V\", sep = \",\", from = c(\"from\", \"to\"))$V), \")\"), \";\"))\n  cat(\"\\n\")\n  cat(\"param T:= 7;\")\n  cat(\"\\n\")\n  cat(\"param alpha :=\")\n  cat(\"\\n\")\n  cat(do.call(paste, Alphas))\n  cat(\";\")\n  cat(\"\\n\")\n  cat(\"param beta :=\")\n  cat(\"\\n\")\n  cat(do.call(paste, Betas))\n  cat(\";\")\n  cat(\"\\n\")\n  cat(\"param b0 :=\")\n  cat(\"\\n\")\n  cat(do.call(paste, Biomasas))\n  cat(\";\")\n  cat(\"\\n\")\n  cat(\"param u :=\")\n  cat(\"\\n\")\n  cat(do.call(paste, Capacidades))\n  cat(\";\")\n  cat(\"\\n\")\n  cat(\"param c :=\")\n  cat(\"\\n\")\n  cat(do.call(paste, Cost))\n  cat(\";\")\n  cat(\"\\n\")\n  sink()\n  return(list(Nodos = Nodos, Biomasa = Biomasa, Alphas = Alphas, Alpha = Alpha))\n}\n\n",
    "created" : 1499857079836.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "107778411",
    "id" : "E0D6FFF3",
    "lastKnownWriteTime" : 1499856436,
    "last_content_update" : 1499856436,
    "path" : "~/Documents/PostdocPablo/dist.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}